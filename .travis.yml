language: python
sudo: false

python:
  - "3.6"
  - "2.7"

env:
  global:
    - PACKAGE_NAME=picky-conda
    - secure: "onN1oWi1bOrq/ln0eGjrNtAKN0N1IzXYFoj0PZ8PmnUfcjnVL/CkakpqubfaRD89jCTnkQVUQxVLIIUskGMEOaTbN+f4LbR4ChB3bD7IxPZC87bbTXJul6RU2BIA8agkLUbaOJi4Nzl5uxMhe+haZn9FPuroperJZ76nHUZ9MMr/DFF2Wvu1scbL6gn4+NMMPSHKvaWyYPyySOh6NSFyT0l1VuRrtLr6o6Cu+pbBnQo70Hhei+Tt5hFnQDm6f4pvICJCWTrLRndNk7iyWF6NyhJD3aCejAsGkTh81TicdihgnihHgqR41TbTB0BW6ntir+pb2BMh1dUIRvdCXSzVpVMKzjNBSr4MY6/MxJ3BI7/DNb42VGFs4mrp5YYNVqv7mrGro37vuaooosj0uCtEZHg99YJeIP53SUPhVUn/MF/yffq5DlLUeQIlzFBDcuQirxkRnI1tuxvqK29hHW8jTnI+4XxrjGNLvJOnJaoEZevvJWBUzuw3PJS/eHwH/55iI2WTI6DeuLluUwExjZxZqEkSb8adLopWMADRNUYlce5gJZb9XEc9y74wVqY7JsL6BmXPmy3qOaDOrdtwI5G5ZPL6g4+8UjbdoqLdPZ/SAdLemHWk0QvGWcLvRVhBfpgJXQcDJWUqhcZ4SxpLHpsq1xkfFFdDl8O4OV1TF1aufQU="

before_install:
# Get miniconda. Take the right version, so re-installing python is hopefully not needed.
- echo $TRAVIS_PYTHON_VERSION
- if test -e $HOME/miniconda/bin; then
    echo "miniconda already installed.";
  else
    echo "Installing miniconda.";
    rm -rf $HOME/miniconda;
    mkdir -p $HOME/download;
    if [[ -d $HOME/download/miniconda.sh ]]; then rm -rf $HOME/download/miniconda.sh; fi;
    if [ "${TRAVIS_PYTHON_VERSION}" = "2.7" ]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
    else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
    fi;
    bash $HOME/download/miniconda.sh -b -p $HOME/miniconda;
  fi

install:
- source $HOME/miniconda/bin/activate
- hash -r
# Configure conda and get a few essentials
- conda config --set always_yes yes --set changeps1 no
- conda install -q conda conda-build
# Useful for debugging any issues with conda
- conda info -a

script:
# stop on error:
- set -e

# unit tests
- conda env create python=$TRAVIS_PYTHON_VERSION --file environment.yaml
- conda activate test-environment
- coverage run -m pytest
- conda deactivate

# check we can build the package
- conda build -q conda.recipe

# integration tests
- conda create -n integration python=$TRAVIS_PYTHON_VERSION
- conda activate integration
- conda install --use-local ${PACKAGE_NAME}
- picky lock
- picky check
- conda deactivate

after_success:
  - conda activate test-environment
  - coveralls

jobs:
  include:

    - stage: coverage
      if: type != cron
      python: 3.6
      after_success: skip

      install: "pip install -U coveralls-check"
      script: "coveralls-check $TRAVIS_COMMIT"

    - stage: release
      if: tag IS present
      python: 3.6
      script: skip
      # work around https://github.com/travis-ci/travis-ci/issues/8337:
      after_success: true

      install:
      - if test -e $HOME/miniconda/bin; then
          echo "miniconda already installed.";
        else
          echo "Installing miniconda.";
          rm -rf $HOME/miniconda;
          mkdir -p $HOME/download;
          if [[ -d $HOME/download/miniconda.sh ]]; then rm -rf $HOME/download/miniconda.sh; fi;
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
          bash $HOME/download/miniconda.sh -b -p $HOME/miniconda;
        fi
      - source $HOME/miniconda/bin/activate
      - conda config --set always_yes yes --set changeps1 no
      - conda install -q conda conda-build anaconda-client
      before_deploy:
      - export ANACONDA_LABEL=$(python -c 'import os; tt=os.environ["TRAVIS_TAG"]; print("dev" if "dev" in tt else "main")')
      - source $HOME/miniconda/bin/activate
      deploy:
        provider: script
        skip_cleanup: true
        script: "conda build -q conda.recipe && anaconda -t $ANACONDA_TOKEN upload --force -l ${ANACONDA_LABEL} ${HOME}/miniconda/conda-bld/*/${PACKAGE_NAME}-*.tar.bz2"
        on:
          tags: true
          repo: Simplistix/picky-conda
